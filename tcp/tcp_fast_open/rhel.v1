diff --git a/include/linux/ipv6.h b/include/linux/ipv6.h
index cbea112..4f6bb2e 100644
--- a/include/linux/ipv6.h
+++ b/include/linux/ipv6.h
@@ -394,6 +394,20 @@ struct tcp6_sock {
 	struct ipv6_pinfo inet6;
 };
 
+struct tcp6_sock_extended {
+	int pad;
+};
+
+#define TCP6_SOCK_EXTENDED_SIZE sizeof(struct tcp6_sock_extended)
+#define TCP6_SOCK_TOTAL_SIZE \
+	(TCP6_SOCK_EXTENDED_SIZE + sizeof(struct tcp6_sock))
+
+static inline struct tcp6_sock_extended *
+tcp6_sock_extended(const struct tcp6_sock *sk)
+{
+	return (struct tcp6_sock_extended *)(sk + sizeof(*sk));
+}
+
 extern int inet6_sk_rebuild_header(struct sock *sk);
 
 #if defined(CONFIG_IPV6) || defined(CONFIG_IPV6_MODULE)
diff --git a/include/linux/tcp.h b/include/linux/tcp.h
index a714abb..84e7dc9 100644
--- a/include/linux/tcp.h
+++ b/include/linux/tcp.h
@@ -428,6 +428,20 @@ static inline struct tcp_sock *tcp_sk(const struct sock *sk)
 	return (struct tcp_sock *)sk;
 }
 
+struct tcp_sock_extended {
+	int pad;
+};
+
+#define TCP_SOCK_EXTENDED_SIZE sizeof(struct tcp_sock_extended)
+#define TCP_SOCK_TOTAL_SIZE \
+	(TCP_SOCK_EXTENDED_SIZE + sizeof(struct tcp_sock))
+
+static inline struct tcp_sock_extended *
+tcp_sock_extended(const struct tcp_sock *sk)
+{
+	return (struct tcp_sock_extended *)(sk + sizeof(*sk));
+}
+
 struct tcp_timewait_sock {
 	struct inet_timewait_sock tw_sk;
 	u32			  tw_rcv_nxt;
diff --git a/net/ipv4/tcp_ipv4.c b/net/ipv4/tcp_ipv4.c
index 5ee022c..b696c7c 100644
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@ -2466,7 +2466,7 @@ struct proto tcp_prot = {
 	.sysctl_wmem		= sysctl_tcp_wmem,
 	.sysctl_rmem		= sysctl_tcp_rmem,
 	.max_header		= MAX_TCP_HEADER,
-	.obj_size		= sizeof(struct tcp_sock),
+	.obj_size		= TCP_SOCK_TOTAL_SIZE,
 	.slab_flags		= SLAB_DESTROY_BY_RCU,
 	.twsk_prot		= &tcp_timewait_sock_ops,
 	.rsk_prot		= &tcp_request_sock_ops,
diff --git a/net/ipv6/tcp_ipv6.c b/net/ipv6/tcp_ipv6.c
index 5aa7364..e903785 100644
--- a/net/ipv6/tcp_ipv6.c
+++ b/net/ipv6/tcp_ipv6.c
@@ -2113,7 +2113,7 @@ struct proto tcpv6_prot = {
 	.sysctl_wmem		= sysctl_tcp_wmem,
 	.sysctl_rmem		= sysctl_tcp_rmem,
 	.max_header		= MAX_TCP_HEADER,
-	.obj_size		= sizeof(struct tcp6_sock),
+	.obj_size		= TCP6_SOCK_TOTAL_SIZE,
 	.slab_flags		= SLAB_DESTROY_BY_RCU,
 	.twsk_prot		= &tcp6_timewait_sock_ops,
 	.rsk_prot		= &tcp6_request_sock_ops,
