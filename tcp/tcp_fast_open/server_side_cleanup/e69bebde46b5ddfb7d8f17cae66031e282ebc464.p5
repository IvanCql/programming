commit e69bebde46b5ddfb7d8f17cae66031e282ebc464
Author: Neal Cardwell <ncardwell@google.com>
Date:   Sat Sep 22 04:18:57 2012 +0000

    tcp: TCP Fast Open Server - call tcp_validate_incoming() for all packets
    
    A TCP Fast Open (TFO) passive connection must call both
    tcp_check_req() and tcp_validate_incoming() for all incoming ACKs that
    are attempting to complete the 3WHS.
    
    This is needed to parallel all the action that happens for a non-TFO
    connection, where for an ACK that is attempting to complete the 3WHS
    we call both tcp_check_req() and tcp_validate_incoming().
    
    For example, upon receiving the ACK that completes the 3WHS, we need
    to call tcp_fast_parse_options() and update ts_recent based on the
    incoming timestamp value in the ACK.
    
    One symptom of the problem with the previous code was that for passive
    TFO connections using TCP timestamps, the outgoing TS ecr values
    ignored the incoming TS val value on the ACK that completed the 3WHS.
    
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/ipv4/tcp_input.c b/net/ipv4/tcp_input.c
index bb32668..36e069a 100644
--- a/net/ipv4/tcp_input.c
+++ b/net/ipv4/tcp_input.c
@@ -5969,7 +5969,8 @@ int tcp_rcv_state_process(struct sock *sk, struct sk_buff *skb,
 
 		if (tcp_check_req(sk, skb, req, NULL, true) == NULL)
 			goto discard;
-	} else if (!tcp_validate_incoming(sk, skb, th, 0))
+	}
+	if (!tcp_validate_incoming(sk, skb, th, 0))
 		return 0;
 
 	/* step 5: check the ACK field */
